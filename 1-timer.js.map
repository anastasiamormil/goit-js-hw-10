{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    console.log(userSelectedDate);\n    if (userSelectedDate <= Date.now()) {\n      iziToast.warning({\n        title: 'Caution',\n        message: 'Please choose a date in the future',\n      });\n\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nbutton.addEventListener(\n  'click',\n  () => {\n    const timerId = setInterval(() => {\n      const ms = userSelectedDate - Date.now();\n      const time = convertMs(ms);\n      const { days, hours, minutes, seconds } = convertMs(ms);\n\n      daysEl.textContent = addLeadingZero(days);\n      hoursEl.textContent = addLeadingZero(hours);\n      minutesEl.textContent = addLeadingZero(minutes);\n      secondsEl.textContent = addLeadingZero(seconds);\n    }, 1000);\n  },\n  1000\n);\n"],"names":["input","button","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"+IASA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClC,QAAQ,IAAIF,CAAgB,EACxBA,GAAoB,KAAK,OAC3BG,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACjB,CAAO,EAEDR,EAAO,SAAW,IAElBA,EAAO,SAAW,EAErB,CACH,EAEAS,EAAUV,EAAOO,CAAO,EAExB,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAC/B,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACAjB,EAAO,iBACL,QACA,IAAM,CACY,YAAY,IAAM,CAChC,MAAMW,EAAKN,EAAmB,KAAK,IAAG,EAEhC,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtDV,EAAO,YAAce,EAAeJ,CAAI,EACxCV,EAAQ,YAAcc,EAAeH,CAAK,EAC1CV,EAAU,YAAca,EAAeF,CAAO,EAC9CV,EAAU,YAAcY,EAAeD,CAAO,CAC/C,EAAE,GAAI,CACR,EACD,GACF"}